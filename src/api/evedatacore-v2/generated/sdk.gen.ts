// This file is auto-generated by @hey-api/openapi-ts

import {
  createClient,
  createConfig,
  type OptionsLegacyParser,
} from "@hey-api/client-fetch";
import type {
  GetFindNearIdDistanceData,
  GetFindNearIdDistanceError,
  GetFindNearIdDistanceResponse,
  PostEventsData,
  PostEventsError,
  PostEventsResponse,
  GetCharactersData,
  GetCharactersError,
  GetCharactersResponse,
  GetCharacterIdTablesData,
  GetCharacterIdTablesError,
  GetCharacterIdTablesResponse,
  GetCharacterIdNamespacesData,
  GetCharacterIdNamespacesError,
  GetCharacterIdNamespacesResponse,
  GetCharacterIdAssembliesData,
  GetCharacterIdAssembliesError,
  GetCharacterIdAssembliesResponse,
  GetCharacterIdData,
  GetCharacterIdError,
  GetCharacterIdResponse,
  GetAssembliesData,
  GetAssembliesError,
  GetAssembliesResponse,
  GetAssemblyIdNetworkData,
  GetAssemblyIdNetworkError,
  GetAssemblyIdNetworkResponse,
  GetAssemblyIdData,
  GetAssemblyIdError,
  GetAssemblyIdResponse,
  GetNamespacesData,
  GetNamespacesError,
  GetNamespacesResponse,
  GetNamespaceIdTablesData,
  GetNamespaceIdTablesError,
  GetNamespaceIdTablesResponse,
  GetTablesData,
  GetTablesError,
  GetTablesResponse,
  GetTableIdRecordsData,
  GetTableIdRecordsError,
  GetTableIdRecordsResponse,
  GetTableIdData,
  GetTableIdError,
  GetTableIdResponse,
  GetSolarsystemIdAssembliesData,
  GetSolarsystemIdAssembliesError,
  GetSolarsystemIdAssembliesResponse,
} from "./types.gen";

export const client = createClient(createConfig());

export const getFindNearIdDistance = <ThrowOnError extends boolean = false>(
  options: OptionsLegacyParser<GetFindNearIdDistanceData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetFindNearIdDistanceResponse,
    GetFindNearIdDistanceError,
    ThrowOnError
  >({
    ...options,
    url: "/find/near/{id}/{distance}",
  });
};

export const postEvents = <ThrowOnError extends boolean = false>(
  options: OptionsLegacyParser<PostEventsData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    PostEventsResponse,
    PostEventsError,
    ThrowOnError
  >({
    ...options,
    url: "/events",
  });
};

export const getCharacters = <ThrowOnError extends boolean = false>(
  options?: OptionsLegacyParser<GetCharactersData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetCharactersResponse,
    GetCharactersError,
    ThrowOnError
  >({
    ...options,
    url: "/characters",
  });
};

export const getCharacterIdTables = <ThrowOnError extends boolean = false>(
  options: OptionsLegacyParser<GetCharacterIdTablesData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetCharacterIdTablesResponse,
    GetCharacterIdTablesError,
    ThrowOnError
  >({
    ...options,
    url: "/character/{id}/tables",
  });
};

export const getCharacterIdNamespaces = <ThrowOnError extends boolean = false>(
  options: OptionsLegacyParser<GetCharacterIdNamespacesData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetCharacterIdNamespacesResponse,
    GetCharacterIdNamespacesError,
    ThrowOnError
  >({
    ...options,
    url: "/character/{id}/namespaces",
  });
};

export const getCharacterIdAssemblies = <ThrowOnError extends boolean = false>(
  options: OptionsLegacyParser<GetCharacterIdAssembliesData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetCharacterIdAssembliesResponse,
    GetCharacterIdAssembliesError,
    ThrowOnError
  >({
    ...options,
    url: "/character/{id}/assemblies",
  });
};

export const getCharacterId = <ThrowOnError extends boolean = false>(
  options: OptionsLegacyParser<GetCharacterIdData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetCharacterIdResponse,
    GetCharacterIdError,
    ThrowOnError
  >({
    ...options,
    url: "/character/{id}",
  });
};

export const getAssemblies = <ThrowOnError extends boolean = false>(
  options?: OptionsLegacyParser<GetAssembliesData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetAssembliesResponse,
    GetAssembliesError,
    ThrowOnError
  >({
    ...options,
    url: "/assemblies",
  });
};

export const getAssemblyIdNetwork = <ThrowOnError extends boolean = false>(
  options: OptionsLegacyParser<GetAssemblyIdNetworkData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetAssemblyIdNetworkResponse,
    GetAssemblyIdNetworkError,
    ThrowOnError
  >({
    ...options,
    url: "/assembly/{id}/network",
  });
};

export const getAssemblyId = <ThrowOnError extends boolean = false>(
  options: OptionsLegacyParser<GetAssemblyIdData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetAssemblyIdResponse,
    GetAssemblyIdError,
    ThrowOnError
  >({
    ...options,
    url: "/assembly/{id}",
  });
};

export const getNamespaces = <ThrowOnError extends boolean = false>(
  options?: OptionsLegacyParser<GetNamespacesData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetNamespacesResponse,
    GetNamespacesError,
    ThrowOnError
  >({
    ...options,
    url: "/namespaces",
  });
};

export const getNamespaceIdTables = <ThrowOnError extends boolean = false>(
  options: OptionsLegacyParser<GetNamespaceIdTablesData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetNamespaceIdTablesResponse,
    GetNamespaceIdTablesError,
    ThrowOnError
  >({
    ...options,
    url: "/namespace/{id}/tables",
  });
};

export const getTables = <ThrowOnError extends boolean = false>(
  options?: OptionsLegacyParser<GetTablesData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetTablesResponse,
    GetTablesError,
    ThrowOnError
  >({
    ...options,
    url: "/tables",
  });
};

export const getTableIdRecords = <ThrowOnError extends boolean = false>(
  options: OptionsLegacyParser<GetTableIdRecordsData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetTableIdRecordsResponse,
    GetTableIdRecordsError,
    ThrowOnError
  >({
    ...options,
    url: "/table/{id}/records",
  });
};

export const getTableId = <ThrowOnError extends boolean = false>(
  options: OptionsLegacyParser<GetTableIdData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetTableIdResponse,
    GetTableIdError,
    ThrowOnError
  >({
    ...options,
    url: "/table/{id}",
  });
};

export const getSolarsystemIdAssemblies = <
  ThrowOnError extends boolean = false,
>(
  options: OptionsLegacyParser<GetSolarsystemIdAssembliesData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetSolarsystemIdAssembliesResponse,
    GetSolarsystemIdAssembliesError,
    ThrowOnError
  >({
    ...options,
    url: "/solarsystem/{id}/assemblies",
  });
};
