// This file is auto-generated by @hey-api/openapi-ts

export type GetFindNearIdDistanceData = {
  path: {
    /**
     * GET /find/near/:id/:distance Parameter
     */
    distance: number;
    /**
     * GET /find/near/:id/:distance Parameter
     */
    id: number;
  };
};

export type GetFindNearIdDistanceResponse = {
  items: Array<{
    solarSystemId: number;
    distance: number;
  }>;
};

export type GetFindNearIdDistanceError = {
  message: string;
};

export type PostEventsData = {
  /**
   * POST /events Request body
   */
  body: {
    events: {
      [key: string]: number;
    };
  };
};

export type PostEventsResponse = {
  [key: string]: unknown;
};

export type PostEventsError = {
  message: string;
};

export type GetCharactersData = {
  query?: {
    /**
     * GET /characters Parameter
     */
    startKey?: string;
  };
};

export type GetCharactersResponse = {
  items: Array<{
    id: string;
    account?: string;
    createdAt?: number;
    exists?: boolean;
    name?: string;
    tribeId?: number;
  }>;
  nextKey?: string;
};

export type GetCharactersError = {
  message: string;
};

export type GetAssembliesData = {
  query?: {
    /**
     * GET /assemblies Parameter
     */
    startKey?: string;
  };
};

export type GetAssembliesResponse = {
  items: Array<{
    id: string;
    currentState?: number;
    previousState?: number;
    assemblyType?: string;
    isValid?: boolean;
    anchoredAt?: number;
    account?: string;
    ownerId?: string;
    ownerName?: string;
    solarSystemId?: number;
    x?: string;
    y?: string;
    z?: string;
    name?: string;
    dappUrl?: string;
    description?: string;
    networkNodeId?: string;
  }>;
  nextKey?: string;
};

export type GetAssembliesError = {
  message: string;
};

export type GetNamespacesData = {
  query?: {
    /**
     * GET /namespaces Parameter
     */
    startKey?: string;
  };
};

export type GetNamespacesResponse = {
  items: Array<{
    id: string;
    account: string;
    createdAt: number;
    name: string;
    ownerId?: string;
    ownerName?: string;
  }>;
  nextKey?: string;
};

export type GetNamespacesError = {
  message: string;
};

export type GetTablesData = {
  query?: {
    /**
     * GET /tables Parameter
     */
    startKey?: string;
  };
};

export type GetTablesResponse = {
  items: Array<{
    world: string;
    tableId: string;
    account: string;
    namespaceId: string;
    ownerId?: string;
    ownerName?: string;
    schemaOrder: Array<string>;
    key: Array<string>;
    name: string;
    namespace: string;
    type: string;
    schema: {
      [key: string]: {
        type: string;
        internalType: string;
      };
    };
  }>;
  nextKey?: string;
};

export type GetTablesError = {
  message: string;
};

export type GetTableIdRecordsData = {
  path: {
    /**
     * GET /table/:id/records Parameter
     */
    id: string;
  };
  query?: {
    /**
     * GET /table/:id/records Parameter
     */
    startKey?: string;
  };
};

export type GetTableIdRecordsResponse = {
  items: Array<{
    [key: string]: unknown;
  }>;
  nextKey?: string;
};

export type GetTableIdRecordsError = {
  message: string;
};

export type GetTableIdData = {
  path: {
    /**
     * GET /table/:id Parameter
     */
    id: string;
  };
};

export type GetTableIdResponse = {
  world: string;
  tableId: string;
  account: string;
  namespaceId: string;
  ownerId?: string;
  ownerName?: string;
  schemaOrder: Array<string>;
  key: Array<string>;
  name: string;
  namespace: string;
  type: string;
  schema: {
    [key: string]: {
      type: string;
      internalType: string;
    };
  };
};

export type GetTableIdError = {
  message: string;
};
