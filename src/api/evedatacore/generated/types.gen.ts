// This file is auto-generated by @hey-api/openapi-ts

export type GetCalcPathFromToData = {
  path: {
    /**
     * GET /calc/path/:from/:to Parameter
     */
    from: number;
    /**
     * GET /calc/path/:from/:to Parameter
     */
    to: number;
  };
  query: {
    /**
     * GET /calc/path/:from/:to Parameter
     */
    characterId?: string;
    /**
     * GET /calc/path/:from/:to Parameter
     */
    corpId?: number | null;
    /**
     * GET /calc/path/:from/:to Parameter
     */
    jumpDistance: number;
    /**
     * GET /calc/path/:from/:to Parameter
     */
    onlySmartGates?: "all" | "mine" | "corporation";
    /**
     * GET /calc/path/:from/:to Parameter
     */
    optimize?: "fuel" | "distance" | "hops";
    /**
     * GET /calc/path/:from/:to Parameter
     */
    smartGates?: "none" | "unrestricted" | "restricted";
  };
};

export type GetCalcPathFromToResponse = {
  path: Array<
    | {
        from: number;
        to: number;
        distance: number;
        type: "jump" | "gate";
      }
    | {
        from: number;
        to: number;
        distance: number;
        type: "smartgate";
        id: string;
        owner?: {
          address: string;
          id: string;
          name: string;
          corpId: number;
        };
        name?: string;
        itemId: string;
      }
  >;
};

export type GetCalcPathFromToError = {
  message: string;
};

export type GetFindNearIdDistanceData = {
  path: {
    /**
     * GET /find/near/:id/:distance Parameter
     */
    distance: number;
    /**
     * GET /find/near/:id/:distance Parameter
     */
    id: number;
  };
};

export type GetFindNearIdDistanceResponse = {
  items: Array<{
    solarSystemId: number;
    distance: number;
  }>;
};

export type GetFindNearIdDistanceError = {
  message: string;
};

export type PostEventsData = {
  /**
   * POST /events Request body
   */
  body: {
    events: {
      [key: string]: number;
    };
  };
};

export type PostEventsResponse = {
  [key: string]: unknown;
};

export type PostEventsError = {
  message: string;
};
