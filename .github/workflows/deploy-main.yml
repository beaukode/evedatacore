name: Build and deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - production

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    concurrency:
      group: "build-${{github.ref}}"
      cancel-in-progress: false
    runs-on: "ubuntu-latest"
    environment: ${{github.ref_name}}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node 20.x Environment
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - name: "Frontend install"
        run: "npm ci"
      - name: "Frontend test"
        run: "npm run test"
      - name: "Frontend build"
        env:
          DOT_ENV_FILE: ".env.${{ github.ref_name }}"
        run: |
          if [ -f $DOT_ENV_FILE ]; then
            export $(grep -v '^#' $DOT_ENV_FILE | xargs -d '\n')
          fi
          npm run build
      - name: Configure AWS credentials
        if: vars.AWS_ACCOUNT_ID && vars.AWS_ROLE_NAME
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{vars.AWS_ACCOUNT_ID}}:role/${{vars.AWS_ROLE_NAME}}
          aws-region: "us-east-1"
      - name: "Deploy to s3"
        if: vars.S3_BUCKET
        run: |
          aws s3 sync --no-progress ./dist/ s3://${{vars.S3_BUCKET}}/
      - name: "Invalidate CDN cache"
        if: vars.DISTRIBUTION_ID
        run: |
          aws cloudfront create-invalidation --distribution-id ${{vars.DISTRIBUTION_ID}} --paths "/*"
